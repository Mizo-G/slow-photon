/* Login User */
CREATE   PROCEDURE [dbo].[LoginUser]
    @Email VARCHAR(100),
    @Hash CHAR(64)
AS
BEGIN
    SET NOCOUNT ON;

    DECLARE @UserId INT;
    DECLARE @CurrentDateTime DATETIME2 = GETUTCDATE();
    
    /* start docs
    {
        "description": "Log in a user by verifying email and hash, and update login attempts and dates. Returns the logged in User or Null.",
        "params": [
            { "Name": "@Email", "Type": "VARCHAR(100)", "Default": null },
            { "Name": "@Hash", "Type": "CHAR(64)", "Default": null }
        ],
        "returns": [
            "Id",
            "FirstName",
            "LastName",
            "Email",
            "PhoneNumber",
            "Country",
            "City",
            "IsActive",
            "IsBlocked"
        ]
    }
    end docs */

    -- Check if the email and hash match
    SELECT @UserId = u.Id
    FROM [dbo].[User] u
    INNER JOIN [dbo].[UserDetails] ud ON u.Id = ud.UserId
    WHERE u.Email = @Email AND ud.Hash = @Hash AND u.IsArchived = 0;

    IF @UserId IS NOT NULL
    BEGIN
        -- Update the login success details
        UPDATE [dbo].[UserDetails]
        SET LastLoginDate = @CurrentDateTime,
            LastLoginAttempt = @CurrentDateTime,
            FailedLoginAttemptsCount = 0
        WHERE UserId = @UserId;

        SELECT 
            u.Id,
            u.FirstName,
            u.LastName,
            u.Email,
            u.PhoneNumber,
            u.Country,
            u.City,
            u.IsActive,
            u.IsBlocked
        FROM [dbo].[User] u
        WHERE u.Id = @UserId AND u.IsArchived = 0;
    END
    ELSE
    BEGIN
        -- Update the login failure details
        UPDATE [dbo].[UserDetails]
        SET LastLoginAttempt = @CurrentDateTime,
            FailedLoginAttemptsCount = FailedLoginAttemptsCount + 1
        WHERE EXISTS (SELECT 1 FROM [dbo].[User] u
                      INNER JOIN [dbo].[UserDetails] ud ON u.Id = ud.UserId
                      WHERE u.Email = @Email);
    END
END;
GO
